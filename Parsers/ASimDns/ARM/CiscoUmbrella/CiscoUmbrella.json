{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "workspaceName": {
          "type": "string"
      },
      "location": {
        "type": "string"
      }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "vimciscoumbrella",
            "dependsOn": [
              "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "Vendor Information Model Dns - Cisco Umbrella",
              "category": "Security",
              "FunctionAlias": "vimDnsCiscoUmbrella",
              "query": "let DNSQuery_CiscoUmbrella=(){\n    Cisco_Umbrella_dns_CL\n    // \n    // *********** Parsing\n    | parse QueryType_s with DnsQueryType:int \" (\"DnsQueryTypeName:string \")\"\n    //\n    | project \n    //\n    // ******************* Mandatory\n      Type='Cisco_Umbrella_dns_CL',\n       EventCount=int(1),\n       EventStartTime=todatetime(Timestamp_t),\n       EventProduct=\"Umbrella\",\n       EventVendor=\"Cisco Systems\",\n       EventSchemaVersion=\"0.1.1\",\n       Dvc=\"Unknown\" ,\n       EventType=\"lookup\",\n       EventResult=iff(ResponseCode_s=~'NOERROR','Success','Failure'),\n       EventResultDetails=ResponseCode_s,  // => ResponseCodeNames\n       //\n       TimeGenerated, // not handled by schema, but we need to preserve it\n       SrcIpAddr=column_ifexists('InternalIp_s', ''),\n       EventSubType='response',\n  // ********** Renamed columns\n       UrlCategory=column_ifexists('Categories_s', ''),\n       DnsQuery=column_ifexists('Domain_s', '') ,  // [DnsQueryName]\n       ThreatCategory=column_ifexists('Blocked_Categories_s', ''),\n       SrcNatIpAddr=column_ifexists('ExternalIp_s', ''),\n       DvcAction=column_ifexists('Action_s', ''),\n       EventEndTime=todatetime(column_ifexists('Timestamp_t', '')),  // [is this the same as TimeGenrated?]\n   //\n   // *************** keep Parsed data\n       DnsQueryType, DnsQueryTypeName, \n   //\n   // **** Not in schema\n       Identities=column_ifexists('Identities_s', ''), \n       IdentityTypes=column_ifexists('Identity_Types_s', ''),\n       PolicyIdentity=column_ifexists('Policy_Identity_s', ''),\n       PolicyIdentityType=column_ifexists('Policy_Identity_Type_s', '')\n  //\n  // **************Aliases\n  | extend \n      DnsResponseCodeName=EventResultDetails, \n      DomainCategory=UrlCategory,\n      Domain=DnsQuery,\n      IpAddr=SrcIpAddr,\n  // Backward Competability\n      Query=DnsQuery\n      , QueryType=DnsQueryType\n      , ResponseCodeName=DnsResponseCodeName\n      , QueryTypeName=DnsQueryTypeName\n      // \n       };\nDNSQuery_CiscoUmbrella\n",
              "version": 1
          }
        }
      ]
    }
  ]
}
